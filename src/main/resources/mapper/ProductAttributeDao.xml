<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="prv.rcl.dao.ProductAttributeDao">

    <resultMap id="BaseResultMap" type="prv.rcl.entity.ProductAttribute">
        <!--@Table product_attribute-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="productId" column="product_id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="sort" column="sort" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          id, product_id, name, sort
        from product_attribute
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          id, product_id, name, sort
        from product_attribute
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="productId != null">
                and product_id = #{productId}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="sort != null">
                and sort = #{sort}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          id, product_id, name, sort
        from mail.product_attribute
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from product_attribute
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="productId != null">
                and product_id = #{productId}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="sort != null">
                and sort = #{sort}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into product_attribute(product_id, name, sort)
        values (#{productId}, #{name}, #{sort})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into product_attribute(product_id, name, sort)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.productId}, #{entity.name}, #{entity.sort})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into product_attribute(product_id, name, sort)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.productId}, #{entity.name}, #{entity.sort})
        </foreach>
        on duplicate key update
        product_id = values(product_id),
        name = values(name),
        sort = values(sort)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update product_attribute
        <set>
            <if test="productId != null">
                product_id = #{productId},
            </if>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="sort != null">
                sort = #{sort},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from product_attribute where id = #{id}
    </delete>

</mapper>

