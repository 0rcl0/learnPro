<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="prv.rcl.dao.TransactionRecordDao">

    <resultMap id="BaseResultMap" type="prv.rcl.entity.TransactionRecord">
        <!--@Table transaction_record-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="orderSn" column="order_sn" jdbcType="VARCHAR"/>
        <result property="events" column="events" jdbcType="VARCHAR"/>
        <result property="result" column="result" jdbcType="VARCHAR"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          id, order_sn, events, result, created_at, updated_at
        from transaction_record
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          id, order_sn, events, result, created_at, updated_at
        from transaction_record
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="orderSn != null and orderSn != ''">
                and order_sn = #{orderSn}
            </if>
            <if test="events != null and events != ''">
                and events = #{events}
            </if>
            <if test="result != null and result != ''">
                and result = #{result}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          id, order_sn, events, result, created_at, updated_at
        from mail.transaction_record
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from transaction_record
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="orderSn != null and orderSn != ''">
                and order_sn = #{orderSn}
            </if>
            <if test="events != null and events != ''">
                and events = #{events}
            </if>
            <if test="result != null and result != ''">
                and result = #{result}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into transaction_record(order_sn, events, result, created_at, updated_at)
        values (#{orderSn}, #{events}, #{result}, #{createdAt}, #{updatedAt})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into transaction_record(order_sn, events, result, created_at, updated_at)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.orderSn}, #{entity.events}, #{entity.result}, #{entity.createdAt}, #{entity.updatedAt})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into transaction_record(order_sn, events, result, created_at, updated_at)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.orderSn}, #{entity.events}, #{entity.result}, #{entity.createdAt}, #{entity.updatedAt})
        </foreach>
        on duplicate key update
        order_sn = values(order_sn),
        events = values(events),
        result = values(result),
        created_at = values(created_at),
        updated_at = values(updated_at)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update transaction_record
        <set>
            <if test="orderSn != null and orderSn != ''">
                order_sn = #{orderSn},
            </if>
            <if test="events != null and events != ''">
                events = #{events},
            </if>
            <if test="result != null and result != ''">
                result = #{result},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from transaction_record where id = #{id}
    </delete>

</mapper>

